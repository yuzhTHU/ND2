KUR_MM: &KUR
  network: 
    use: ./data/networks/BA_100.csv
  N: 1000
  dt: 0.01
  root_type: node
  variables:
    independent:
      c: # Node Class
        type: node
        initialize: np.random.choice([0, 1], (1, V), p=[0.5, 0.5])
      x:
        type: node
        initialize: np.random.uniform(-np.pi, np.pi, (1, V))
        update: np.where(c==0, np.mod(x + dx1 * dt + np.pi, 2 * np.pi) - np.pi, x + dx2 * dt)
      omega:
        type: node
        initialize: np.random.normal(1.0, 0.1, (1, V))
    dependent:
      dx1:
        type: node
        GD_expr: omega + 1*aggr(sin(sour(x, G, A)-targ(x, G, A)), G, A)
      dx2:
        type: node
        GD_expr: -x + aggr(sour(regular(x, 2), G, A), G, A)
  plot: [x]

## Need post-process:
# data = json.load(open('./data/hetero/KUR_MM.json', 'r'))
# data = dict(
#     V=data['V'],
#     E=data['E'],
#     A=data['A'],
#     G=data['G'],
#     c=np.where(np.array(data['K']) > 0, 0, 1).tolist(),
#     x=data['x'],
#     omega=np.where(np.array(data['K']) > 0, data['omega'], 0).tolist(),
#     dx=np.where(np.array(data['K'])>0, data['dx1'], data['dx2']).tolist()
# )
# json.dump(open('./data/hetero/KUR_MM.json', 'w'))
